{"version":3,"sources":["kaleidosync/template.js"],"names":["Template","setEventHooks","initializeVisualizer","events","beforeInit","console","log","afterInit","beforeStart","afterStart","beforeStop","afterStop","intervals","hooks","tatums","i","segments","beats","bars","sections","Visualizer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEMA,Q;;;AACJ,wBAAc;AAAA;;AAAA;;AAGZ,YAAKC,aAAL;AACA,YAAKC,oBAAL;AAJY;AAKb;;;;sCAEe;AACd;AACA,aAAKC,MAAL,CAAYC,UAAZ,GAA0B;AAAA,iBAAMC,QAAQC,GAAR,CAAY,cAAZ,CAAN;AAAA,SAA1B;AACA,aAAKH,MAAL,CAAYI,SAAZ,GAA0B;AAAA,iBAAMF,QAAQC,GAAR,CAAY,aAAZ,CAAN;AAAA,SAA1B;;AAEA;AACA,aAAKH,MAAL,CAAYK,WAAZ,GAA0B;AAAA,iBAAMH,QAAQC,GAAR,CAAY,eAAZ,CAAN;AAAA,SAA1B;AACA,aAAKH,MAAL,CAAYM,UAAZ,GAA0B;AAAA,iBAAMJ,QAAQC,GAAR,CAAY,cAAZ,CAAN;AAAA,SAA1B;;AAEA;AACA,aAAKH,MAAL,CAAYO,UAAZ,GAA0B;AAAA,iBAAML,QAAQC,GAAR,CAAY,cAAZ,CAAN;AAAA,SAA1B;AACA,aAAKH,MAAL,CAAYQ,SAAZ,GAA0B;AAAA,iBAAMN,QAAQC,GAAR,CAAY,aAAZ,CAAN;AAAA,SAA1B;AACD;;;yCAGkB;AACjB,aAAKM,SAAL,CAAeC,KAAf,CAAqBC,MAArB,GAA8B,UAACC,CAAD,EAAO;AACnCV,kBAAQC,GAAR,CAAY,YAAYS,CAAxB;AACD,SAFD;;AAIA,aAAKH,SAAL,CAAeC,KAAf,CAAqBG,QAArB,GAAgC,UAACD,CAAD,EAAO;AACrCV,kBAAQC,GAAR,CAAY,cAAcS,CAA1B;AACD,SAFD;;AAIA,aAAKH,SAAL,CAAeC,KAAf,CAAqBI,KAArB,GAA6B,UAACF,CAAD,EAAO;AAClCV,kBAAQC,GAAR,CAAY,WAAWS,CAAvB;AACD,SAFD;;AAIA,aAAKH,SAAL,CAAeC,KAAf,CAAqBK,IAArB,GAA4B,UAACH,CAAD,EAAO;AACjCV,kBAAQC,GAAR,CAAY,UAAUS,CAAtB;AACD,SAFD;;AAIA,aAAKH,SAAL,CAAeC,KAAf,CAAqBM,QAArB,GAAgC,UAACJ,CAAD,EAAO;AACrCV,kBAAQC,GAAR,CAAY,cAAcS,CAA1B;AACD,SAFD;AAGD;;;;IA3CoBK,oB;;oBA8CRpB,Q","file":"template.js","sourcesContent":["import Visualizer from './visualizer'\n\nclass Template extends Visualizer {\n  constructor() {\n    super()\n\n    this.setEventHooks()\n    this.initializeVisualizer()\n  }\n\n  setEventHooks() {\n    // Called before and after visualizer starts for the first tiem.\n    this.events.beforeInit  = () => console.log('beforeInit()')\n    this.events.afterInit   = () => console.log('afterInit()')   \n\n    // Called before and after visualizer starts.\n    this.events.beforeStart = () => console.log('beforeStart()') \n    this.events.afterStart  = () => console.log('afterStart()')\n\n    // Called before and after the visualizer stops.\n    this.events.beforeStop  = () => console.log('beforeStop()')\n    this.events.afterStop   = () => console.log('afterStop()')\n  }\n  \n  // Automatically called during the `beforeStart` event.\n  setIntervalHooks() {\n    this.intervals.hooks.tatums = (i) => {\n      console.log('Tatum: ' + i)\n    }\n\n    this.intervals.hooks.segments = (i) => {\n      console.log('Segment: ' + i)\n    }\n\n    this.intervals.hooks.beats = (i) => {      \n      console.log('Beat: ' + i)\n    }\n\n    this.intervals.hooks.bars = (i) => {\n      console.log('Bar: ' + i)\n    }\n\n    this.intervals.hooks.sections = (i) => {\n      console.log('Section: ' + i)\n    }\n  } \n}\n\nexport default Template"]}